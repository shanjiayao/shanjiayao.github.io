<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - Jiayao&#39;s blog</title>
        <link>http://shanjiayao.com/posts/</link>
        <description>所有文章 | Jiayao&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>shanjiayao97@gmail.com (jiayao)</managingEditor>
            <webMaster>shanjiayao97@gmail.com (jiayao)</webMaster><lastBuildDate>Sat, 10 Jul 2021 16:10:19 &#43;0000</lastBuildDate><atom:link href="http://shanjiayao.com/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Python中的奇奇怪怪</title>
    <link>http://shanjiayao.com/python%E4%B8%AD%E7%9A%84%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA/</link>
    <pubDate>Sat, 10 Jul 2021 16:10:19 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://shanjiayao.com/python%E4%B8%AD%E7%9A%84%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA/</guid>
    <description><![CDATA[本文主要记录python中的一些零散琐碎的知识点，便于之后整理成系统性的学习笔记～ 在个人的角度来看，Python作为一门被深度学习、数据处理]]></description>
</item><item>
    <title>算法学习之排序算法对比</title>
    <link>http://shanjiayao.com/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%8E%92%E5%BA%8F%E4%BB%A3%E7%A0%81/</link>
    <pubDate>Thu, 27 May 2021 16:10:19 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://shanjiayao.com/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%8E%92%E5%BA%8F%E4%BB%A3%E7%A0%81/</guid>
    <description><![CDATA[本文是学习排序系列的第五篇，主要对比三种基本排序算法以及三种进阶排序算法，对应的排序算法学习笔记如下 基础排序(冒泡、插入、选择) 希尔排序 归并]]></description>
</item><item>
    <title>算法学习之快速排序</title>
    <link>http://shanjiayao.com/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</link>
    <pubDate>Tue, 25 May 2021 16:10:19 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://shanjiayao.com/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</guid>
    <description><![CDATA[本文是学习排序系列的第四篇，主要介绍较为常用的排序算法：快速排序 前文学习了归并排序，该排序算法采用了分治(divide and conquer, D&amp;C)的]]></description>
</item><item>
    <title>Python还债日记之列表解析式</title>
    <link>http://shanjiayao.com/python%E8%BF%98%E5%80%BA%E6%97%A5%E8%AE%B0%E4%B9%8B%E5%88%97%E8%A1%A8%E8%A7%A3%E6%9E%90%E5%BC%8F/</link>
    <pubDate>Thu, 13 May 2021 16:10:19 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://shanjiayao.com/python%E8%BF%98%E5%80%BA%E6%97%A5%E8%AE%B0%E4%B9%8B%E5%88%97%E8%A1%A8%E8%A7%A3%E6%9E%90%E5%BC%8F/</guid>
    <description><![CDATA[python中的列表解析式 1. 列表解析式 python中的列表解析式可以帮助我们用简短的语言来创建一个列表，形如： 1 [x*y for x in range(1,5) if x &gt; 2 for y in range(1,4) if]]></description>
</item><item>
    <title>算法学习之归并排序</title>
    <link>http://shanjiayao.com/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</link>
    <pubDate>Sat, 08 May 2021 16:10:19 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://shanjiayao.com/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</guid>
    <description><![CDATA[本文是学习排序系列的第三篇，主要介绍归并排序 注：本文的排序算法默认升序 0. 常见排序算法性能对比 再贴一张常见排序算法的性能对比，方便查看~ 1. 归并]]></description>
</item><item>
    <title>算法学习之希尔排序</title>
    <link>http://shanjiayao.com/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F/</link>
    <pubDate>Wed, 28 Apr 2021 16:10:19 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://shanjiayao.com/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F/</guid>
    <description><![CDATA[本文是学习排序系列的第二篇，主要介绍插入排序的进阶版-&gt;希尔排序 注：本文的排序算法默认升序 0. 常见排序算法性能对比 再贴一张常见排序算法的]]></description>
</item><item>
    <title>算法学习之基础排序</title>
    <link>http://shanjiayao.com/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%9F%BA%E7%A1%80%E6%8E%92%E5%BA%8F/</link>
    <pubDate>Mon, 26 Apr 2021 16:10:19 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://shanjiayao.com/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%9F%BA%E7%A1%80%E6%8E%92%E5%BA%8F/</guid>
    <description><![CDATA[本文是学习排序系列的第一篇，主要介绍一些基本概念，对常见排序算法进行总结，以及介绍三种初级排序算法：冒泡、选择、插入 注：本文的排序算法默认升]]></description>
</item><item>
    <title>总结数组与链表的区别[转载]</title>
    <link>http://shanjiayao.com/%E6%95%B0%E7%BB%84%E5%92%8C%E9%93%BE%E8%A1%A8%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Wed, 17 Mar 2021 01:10:19 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://shanjiayao.com/%E6%95%B0%E7%BB%84%E5%92%8C%E9%93%BE%E8%A1%A8%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[总结 比较项目 数组 链表 大小定义 声明时给定好，增删会重新定义数组大小 无需指定，在执行过程中自行增长和收缩 元素位置 编译时分配 运行时分配 元素顺序 连续]]></description>
</item><item>
    <title>ubuntu18_04升级记录</title>
    <link>http://shanjiayao.com/ubuntu_install/</link>
    <pubDate>Sun, 07 Mar 2021 16:10:19 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://shanjiayao.com/ubuntu_install/</guid>
    <description><![CDATA[1. 系统安装 关闭secure boot 插上系统盘，开机后狂按ESC，暂停启动，然后弹出BIOS设置，选择启动设备，使用U盘启动 在选择‘Install U]]></description>
</item><item>
    <title>Python还债日记之迭代器/生成器/yeild</title>
    <link>http://shanjiayao.com/python%E8%BF%98%E5%80%BA%E6%97%A5%E8%AE%B0%E4%B9%8Byeild%E5%85%B3%E9%94%AE%E5%AD%97/</link>
    <pubDate>Sat, 06 Mar 2021 16:10:19 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://shanjiayao.com/python%E8%BF%98%E5%80%BA%E6%97%A5%E8%AE%B0%E4%B9%8Byeild%E5%85%B3%E9%94%AE%E5%AD%97/</guid>
    <description><![CDATA[转载自： https://liam.page/2017/06/30/understanding-yield-in-python/ 生成器 = 迭代器 + yeild 概述 逐个获取元素的过程，就是「迭代」 迭代器中没有元素时，调用 next() 方法会抛出 StopIteration 异常 如果提供了 __iter__() 或者 __getitem__() 方法，那么该类的]]></description>
</item></channel>
</rss>
